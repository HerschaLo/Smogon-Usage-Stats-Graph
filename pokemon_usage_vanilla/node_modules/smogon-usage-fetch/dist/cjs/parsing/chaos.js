"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapChaosData = void 0;
const lightdash_1 = require("lightdash");
/**
 * @private
 */
const mapSpread = (spreadKey) => {
    const [nature, evs] = spreadKey.split(":");
    const [hp, atk, def, spa, spd, spe] = evs.split("/");
    return {
        nature,
        evs: {
            hp: Number(hp),
            atk: Number(atk),
            def: Number(def),
            spa: Number(spa),
            spd: Number(spd),
            spe: Number(spe),
        },
    };
};
/**
 * @private
 */
const mapPokemonData = (rawPokemonData) => {
    return {
        usage: rawPokemonData.usage,
        rawCount: rawPokemonData["Raw count"],
        moves: lightdash_1.toMap(rawPokemonData.Moves),
        abilities: lightdash_1.toMap(rawPokemonData.Abilities),
        items: lightdash_1.toMap(rawPokemonData.Items),
        spreads: lightdash_1.toMapBy(rawPokemonData.Spreads, (key) => mapSpread(key), (_key, val) => val),
        happiness: lightdash_1.toMapBy(rawPokemonData.Happiness, (key) => Number(key), (_key, val) => val),
        teammates: lightdash_1.toMap(rawPokemonData.Teammates),
        checksAndCounters: lightdash_1.toMap(rawPokemonData["Checks and Counters"]),
        viabilityCeiling: rawPokemonData["Viability Ceiling"],
    };
};
/**
 * @private
 */
const mapChaosData = (rawChaosData) => {
    return {
        cutoff: rawChaosData.info.cutoff,
        cutoffDeviation: rawChaosData.info["cutoff deviation"],
        numberOfBattles: rawChaosData.info["number of battles"],
        data: lightdash_1.toMapBy(rawChaosData.data, (key) => key, (_key, val) => mapPokemonData(val)),
    };
};
exports.mapChaosData = mapChaosData;
//# sourceMappingURL=chaos.js.map