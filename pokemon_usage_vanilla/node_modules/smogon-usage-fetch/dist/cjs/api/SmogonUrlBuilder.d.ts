import type { Format } from "../model/format";
import type { Timeframe } from "../model/timeframe";
/**
 * @private
 */
declare const enum ApiPath {
    MONOTYPE = "monotype",
    CHAOS = "chaos",
    METAGAME = "metagame",
    LEADS = "leads"
}
/**
 * @private
 */
declare const enum FileType {
    TEXT = "txt",
    JSON = "json"
}
/**
 * Builder for smogon stat URLs.
 * Note: No validation for an existing URL are made, callers have to ensure their access to this class is sane.
 *
 * @private
 */
declare class SmogonUrlBuilder {
    private readonly baseUrl;
    private subPath?;
    private fileType?;
    private timeframe?;
    private format?;
    /**
     * Creates a new instance.
     *
     * @param baseUrl Base URL to use.
     */
    constructor(baseUrl: URL);
    setTimeframe(timeframe: Timeframe): SmogonUrlBuilder;
    setFormat(format: Format): SmogonUrlBuilder;
    setSubPath(path: ApiPath): SmogonUrlBuilder;
    setFileType(fileType: FileType): SmogonUrlBuilder;
    /**
     * Builds the current instance and returns the URL.
     *
     * @return Built URL.
     */
    build(): URL;
}
export { SmogonUrlBuilder, ApiPath, FileType };
//# sourceMappingURL=SmogonUrlBuilder.d.ts.map