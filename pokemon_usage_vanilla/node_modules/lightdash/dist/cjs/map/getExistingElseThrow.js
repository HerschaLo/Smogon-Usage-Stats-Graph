"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getExistingElseThrow = void 0;
/**
 * Gets the value of a map entry by its key, throwing if the map does not contain the key.
 *
 * @since 13.0.0
 * @category Map
 * @param map Map to check against.
 * @param key Key to get the value for.
 * @returns The corresponding value.
 * @throws TypeError if map does not contain key.
 * @example
 * getExistingElseThrow(new Map([["key", 1]]), "key")
 * // => 1
 *
 * getExistingElseThrow(new Map([["key", 1]]), "foo")
 * // => throws TypeError
 */
const getExistingElseThrow = (map, key) => {
    if (!map.has(key)) {
        const mapKeysVisualization = JSON.stringify(Array.from(map.keys()));
        throw new TypeError(`Could not find key '${String(key)}' in map keys '${mapKeysVisualization}'.`);
    }
    return map.get(key);
};
exports.getExistingElseThrow = getExistingElseThrow;
//# sourceMappingURL=getExistingElseThrow.js.map